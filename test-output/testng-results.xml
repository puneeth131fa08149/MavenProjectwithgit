<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" ignored="0" total="4" passed="3">
  <reporter-output>
  </reporter-output>
  <suite name="Default suite" duration-ms="50209" started-at="2020-08-19T04:15:31Z" finished-at="2020-08-19T04:16:21Z">
    <groups>
    </groups>
    <test name="Default test" duration-ms="50209" started-at="2020-08-19T04:15:31Z" finished-at="2020-08-19T04:16:21Z">
      <class name="BaseClass.Base">
        <test-method status="PASS" signature="setReports()[pri:0, instance:BaseClass.Base@27c20538]" name="setReports" is-config="true" duration-ms="161" started-at="2020-08-19T04:15:31Z" finished-at="2020-08-19T04:15:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setReports -->
        <test-method status="PASS" signature="initialization()[pri:0, instance:BaseClass.Base@27c20538]" name="initialization" is-config="true" duration-ms="8232" started-at="2020-08-19T04:15:31Z" finished-at="2020-08-19T04:15:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialization -->
        <test-method status="PASS" signature="testMethod()[pri:1, instance:BaseClass.Base@27c20538]" name="testMethod" duration-ms="20811" started-at="2020-08-19T04:15:39Z" finished-at="2020-08-19T04:16:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethod -->
        <test-method status="PASS" signature="screenShotPage(org.testng.ITestResult)[pri:0, instance:BaseClass.Base@27c20538]" name="screenShotPage" is-config="true" duration-ms="2" started-at="2020-08-19T04:16:00Z" finished-at="2020-08-19T04:16:00Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testMethod status=SUCCESS method=Base.testMethod()[pri:1, instance:BaseClass.Base@27c20538] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- screenShotPage -->
        <test-method status="PASS" signature="google()[pri:2, instance:BaseClass.Base@27c20538]" name="google" duration-ms="14355" started-at="2020-08-19T04:16:00Z" finished-at="2020-08-19T04:16:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- google -->
        <test-method status="PASS" signature="screenShotPage(org.testng.ITestResult)[pri:0, instance:BaseClass.Base@27c20538]" name="screenShotPage" is-config="true" duration-ms="0" started-at="2020-08-19T04:16:14Z" finished-at="2020-08-19T04:16:14Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=google status=SUCCESS method=Base.google()[pri:2, instance:BaseClass.Base@27c20538] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- screenShotPage -->
        <test-method status="PASS" signature="test()[pri:3, instance:BaseClass.Base@27c20538]" name="test" duration-ms="4596" started-at="2020-08-19T04:16:14Z" finished-at="2020-08-19T04:16:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test -->
        <test-method status="PASS" signature="screenShotPage(org.testng.ITestResult)[pri:0, instance:BaseClass.Base@27c20538]" name="screenShotPage" is-config="true" duration-ms="0" started-at="2020-08-19T04:16:19Z" finished-at="2020-08-19T04:16:19Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=test status=SUCCESS method=Base.test()[pri:3, instance:BaseClass.Base@27c20538] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- screenShotPage -->
        <test-method status="FAIL" signature="title()[pri:4, instance:BaseClass.Base@27c20538]" name="title" duration-ms="7" started-at="2020-08-19T04:16:19Z" finished-at="2020-08-19T04:16:19Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [google] but found [Your store. Login]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [google] but found [Your store. Login]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:453)
at org.testng.Assert.assertEquals(Assert.java:463)
at BaseClass.Base.title(Base.java:129)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:236)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- title -->
        <test-method status="PASS" signature="screenShotPage(org.testng.ITestResult)[pri:0, instance:BaseClass.Base@27c20538]" name="screenShotPage" is-config="true" duration-ms="877" started-at="2020-08-19T04:16:19Z" finished-at="2020-08-19T04:16:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=title status=FAILURE method=Base.title()[pri:4, instance:BaseClass.Base@27c20538] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- screenShotPage -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:BaseClass.Base@27c20538]" name="tearDown" is-config="true" duration-ms="643" started-at="2020-08-19T04:16:20Z" finished-at="2020-08-19T04:16:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="EndReport()[pri:0, instance:BaseClass.Base@27c20538]" name="EndReport" is-config="true" duration-ms="495" started-at="2020-08-19T04:16:21Z" finished-at="2020-08-19T04:16:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- EndReport -->
      </class> <!-- BaseClass.Base -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
